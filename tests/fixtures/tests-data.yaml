apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIC5zCCAc+gAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl
      cm5ldGVzMB4XDTIyMDEyNzE2NTYyNFoXDTMyMDEyNTE2NTYyNFowFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJRG
      gR4DoEvTe6vUXFFIjRlUOpKF1jT41W3n5ArSImq+8JjBepZ7ZQh31q/WgZUnFNR3
      ixGOV5xoxwa5y2LA8AA5Q6ceizzy63gH/T2Z3OhJfIeWX53Ff/eg1/SAMfli7nLa
      EpHqkmya6pSABPxG9zSXS/GpNtZ2ese12QEfl9omp+9sxNuWLDWxsr781OIig2oQ
      iy2PlGi86HGVMy9fvguwLorD3pH5FBhRhrIai3gw3cNB5GjncGbsenyX3wqiQ+oV
      JJ2dQRem9sV9LYBmAqWyGtsPQfaFR0XiRQuhKfIY3RApOk+YFdarDz8dphOU1qr/
      MYV9jWmvyuznAGagSs0CAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB
      /wQFMAMBAf8wHQYDVR0OBBYEFPHAzZ61rI1iFaw8QYFMdbktdRM0MA0GCSqGSIb3
      DQEBCwUAA4IBAQAs4+BFsvzb0rMpfFLnJ4f9IF5/rDMRcMEUpR1999nzjkisKaLk
      fTpzqmJkklb8DRYT25mofpSNdJb5F2yiXcgrwgHpWXShvUu5tsffxmamEbitTGWa
      zkaBLiN6a+bCCI5dS4A0EZYxkO4lidof8tvULiznBL573HIExn3dI4z3XX6LGLCo
      fOIv9w0PLLswyTAOYyxj6ApgvOe47uD+ZUyuzprcEZ7JXDTn/BXR2cR6UY5apdY4
      OPVMFzrJcLPJR3pOtsbeCH8g1ikzJFnkloJo1+Kx36EcmcsNogyo+OUP+rwy/bnH
      d/02Qfg0BqgDtWHXF+FYgzEGhPu/vye2FGcu
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2022-01-27T16:58:00Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "452"
    uid: e9655191-b87c-4b73-811b-2d61362ab088
- apiVersion: v1
  data:
    ENV: test
    app: nginx
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ENV":"test","app":"nginx"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"nginx-cm","namespace":"default"}}
    creationTimestamp: "2022-01-27T17:01:16Z"
    name: nginx-cm
    namespace: default
    resourceVersion: "806"
    uid: 29d37cd0-4743-430b-8913-816f56e9d80e
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"batch/v1","kind":"CronJob","metadata":{"annotations":{},"name":"list-resources","namespace":"default"},"spec":{"concurrencyPolicy":"Forbid","jobTemplate":{"spec":{"activeDeadlineSeconds":60,"backoffLimit":1,"suspend":true,"template":{"spec":{"containers":[{"command":["ls","-alhF","/"],"image":"ubuntu:latest","name":"list-resources"}],"restartPolicy":"Never"}},"ttlSecondsAfterFinished":10}},"schedule":"0 0 * * *"}}
    creationTimestamp: "2022-01-31T04:08:58Z"
    name: list-resources
    namespace: default
    resourceVersion: "502338"
    uid: 5011197a-c7e2-4c39-83d7-3ca61cca6c62
  spec:
    concurrencyPolicy: Forbid
    failedJobsHistoryLimit: 1
    jobTemplate:
      metadata:
        creationTimestamp: null
      spec:
        activeDeadlineSeconds: 60
        backoffLimit: 1
        suspend: true
        template:
          metadata:
            creationTimestamp: null
          spec:
            containers:
            - command:
              - ls
              - -alhF
              - /
              image: ubuntu:latest
              imagePullPolicy: Always
              name: list-resources
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Never
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
        ttlSecondsAfterFinished: 10
    schedule: 0 0 * * *
    successfulJobsHistoryLimit: 3
    suspend: false
  status: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2022-01-27T16:57:56Z"
    generation: 1
    labels:
      app: kindnet
      k8s-app: kindnet
      tier: node
    name: kindnet
    namespace: kube-system
    resourceVersion: "550"
    uid: a629e241-31c4-47d3-b2ab-735a4d295230
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kindnet
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kindnet
          k8s-app: kindnet
          tier: node
      spec:
        containers:
        - env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_SUBNET
            value: 10.244.0.0/16
          - name: CONTROL_PLANE_ENDPOINT
            value: kind-control-plane:6443
          image: docker.io/kindest/kindnetd:v20210326-1e038dc5
          imagePullPolicy: IfNotPresent
          name: kindnet-cni
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_RAW
              - NET_ADMIN
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/cni/net.d
            name: cni-cfg
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kindnet
        serviceAccountName: kindnet
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2022-01-27T16:57:44Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "545"
    uid: 61d09344-d089-4b92-95fd-78dc07866286
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/kube-proxy:v1.21.1
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
  TEST_IS_FOR_RESOURCE: "Ingress"
---
apiVersion: v1
items:
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{},"name":"list-resources","namespace":"default"},"spec":{"backoffLimit":1,"template":{"spec":{"containers":[{"command":["ls","-alhF","/"],"image":"ubuntu:latest","name":"list-resources"}],"restartPolicy":"Never"}}}}
    creationTimestamp: "2022-01-31T04:11:12Z"
    labels:
      controller-uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
      job-name: list-resources
    name: list-resources
    namespace: default
    resourceVersion: "502498"
    uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
  spec:
    backoffLimit: 1
    completions: 1
    parallelism: 1
    selector:
      matchLabels:
        controller-uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
    template:
      metadata:
        creationTimestamp: null
        labels:
          controller-uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
          job-name: list-resources
      spec:
        containers:
        - command:
          - ls
          - -alhF
          - /
          image: ubuntu:latest
          imagePullPolicy: Always
          name: list-resources
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Never
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2022-01-31T04:12:13Z"
    conditions:
    - lastProbeTime: "2022-01-31T04:12:13Z"
      lastTransitionTime: "2022-01-31T04:12:13Z"
      status: "True"
      type: Complete
    startTime: "2022-01-31T04:11:12Z"
    succeeded: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/provisioned-by: rancher.io/local-path
    creationTimestamp: "2022-01-27T17:01:38Z"
    finalizers:
    - kubernetes.io/pv-protection
    name: pvc-6801b99e-d658-4095-967b-b035c520886f
    resourceVersion: "867"
    uid: 3033ba7b-1db9-4454-813e-49beabf77538
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 32Mi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: nginx-pvc
      namespace: default
      resourceVersion: "822"
      uid: 6801b99e-d658-4095-967b-b035c520886f
    hostPath:
      path: /var/local-path-provisioner/pvc-6801b99e-d658-4095-967b-b035c520886f_default_nginx-pvc
      type: DirectoryOrCreate
    nodeAffinity:
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - kind-control-plane
    persistentVolumeReclaimPolicy: Delete
    storageClassName: standard
    volumeMode: Filesystem
  status:
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"annotations":{},"name":"nginx-pvc","namespace":"default"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"32Mi"}}}}
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: rancher.io/local-path
      volume.kubernetes.io/selected-node: kind-control-plane
    creationTimestamp: "2022-01-27T17:01:16Z"
    finalizers:
    - kubernetes.io/pvc-protection
    name: nginx-pvc
    namespace: default
    resourceVersion: "870"
    uid: 6801b99e-d658-4095-967b-b035c520886f
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 32Mi
    storageClassName: standard
    volumeMode: Filesystem
    volumeName: pvc-6801b99e-d658-4095-967b-b035c520886f
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 32Mi
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-31T04:11:12Z"
    generateName: list-resources-
    labels:
      controller-uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
      job-name: list-resources
    name: list-resources-8xvpb
    namespace: default
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: list-resources
      uid: b3aa0bb1-708a-4ed0-bf59-f041024404d0
    resourceVersion: "502449"
    uid: a5de814f-6100-4fb2-bd00-cf326a88f4bf
  spec:
    containers:
    - command:
      - ls
      - -alhF
      - /
      image: ubuntu:latest
      imagePullPolicy: Always
      name: list-resources
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6k895
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: kind-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6k895
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T04:11:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T04:11:41Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T04:11:41Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-31T04:11:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cbda7290f3fb743c2b7368c4be3a52d97bbcedad10b7edec126bf35e3d686fd9
      image: docker.io/library/ubuntu:latest
      imageID: docker.io/library/ubuntu@sha256:b5a61709a9a44284d88fb12e5c48db0409cfad5b69d4ff8224077c57302df9cf
      lastState: {}
      name: list-resources
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cbda7290f3fb743c2b7368c4be3a52d97bbcedad10b7edec126bf35e3d686fd9
          exitCode: 0
          finishedAt: "2022-01-31T04:11:39Z"
          reason: Completed
          startedAt: "2022-01-31T04:11:39Z"
    hostIP: 172.18.0.2
    phase: Succeeded
    podIP: 10.244.0.10
    podIPs:
    - ip: 10.244.0.10
    qosClass: BestEffort
    startTime: "2022-01-31T04:11:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-27T17:01:16Z"
    generateName: nginx-deployment-7b6fcd488c-
    labels:
      app: nginx
      pod-template-hash: 7b6fcd488c
    name: nginx-deployment-7b6fcd488c-5q8nt
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-7b6fcd488c
      uid: 55ab4c9e-0a34-4bf6-bdcd-6ce67f3566d6
    resourceVersion: "943"
    uid: 275ae466-164d-4a04-9e25-5dc75537ab57
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: nginx-cm
      image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: www
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m8wlr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - echo 'custom NGINX deployment simulator' > /app/index.html
      image: busybox:latest
      imagePullPolicy: Always
      name: setup-volume
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app
        name: www
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m8wlr
        readOnly: true
    nodeName: kind-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: www
      persistentVolumeClaim:
        claimName: nginx-pvc
    - name: kube-api-access-m8wlr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:01:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:02:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:02:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:01:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3a8ec8c1a2c45bcd82296bf5f906785cd8cc32844f2f27dd8be2633418c0aac3
      image: docker.io/library/nginx:alpine
      imageID: docker.io/library/nginx@sha256:da9c94bec1da829ebd52431a84502ec471c8e548ffb2cedbf36260fd9bd1d4d3
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-01-27T17:02:08Z"
    hostIP: 172.18.0.2
    initContainerStatuses:
    - containerID: containerd://4633ce68c896f22e980c1284b345633c63c1a6231b81fd3af188dd3d79bfe198
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:5acba83a746c7608ed544dc1533b87c737a0b0fb730301639a0179f9344b1678
      lastState: {}
      name: setup-volume
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://4633ce68c896f22e980c1284b345633c63c1a6231b81fd3af188dd3d79bfe198
          exitCode: 0
          finishedAt: "2022-01-27T17:01:48Z"
          reason: Completed
          startedAt: "2022-01-27T17:01:48Z"
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2022-01-27T17:01:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-01-27T17:01:16Z"
    generateName: nginx-deployment-7b6fcd488c-
    labels:
      app: nginx
      pod-template-hash: 7b6fcd488c
    name: nginx-deployment-7b6fcd488c-7kdrw
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-7b6fcd488c
      uid: 55ab4c9e-0a34-4bf6-bdcd-6ce67f3566d6
    resourceVersion: "948"
    uid: 824c2f22-f852-4a15-864a-98598a42b655
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: nginx-cm
      image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: www
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tfzq2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - echo 'custom NGINX deployment simulator' > /app/index.html
      image: busybox:latest
      imagePullPolicy: Always
      name: setup-volume
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app
        name: www
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tfzq2
        readOnly: true
    nodeName: kind-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: www
      persistentVolumeClaim:
        claimName: nginx-pvc
    - name: kube-api-access-tfzq2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:01:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:02:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:02:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-01-27T17:01:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2cf156a63fd040a640e25be8fe1a14e990d2fd4b26ee23f52b29f6dc2717726f
      image: docker.io/library/nginx:alpine
      imageID: docker.io/library/nginx@sha256:da9c94bec1da829ebd52431a84502ec471c8e548ffb2cedbf36260fd9bd1d4d3
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-01-27T17:02:10Z"
    hostIP: 172.18.0.2
    initContainerStatuses:
    - containerID: containerd://52ed1d11bdef8adc56f46308220c86dda300cd5f92940751e8c66cba0de54286
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:5acba83a746c7608ed544dc1533b87c737a0b0fb730301639a0179f9344b1678
      lastState: {}
      name: setup-volume
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://52ed1d11bdef8adc56f46308220c86dda300cd5f92940751e8c66cba0de54286
          exitCode: 0
          finishedAt: "2022-01-27T17:01:50Z"
          reason: Completed
          startedAt: "2022-01-27T17:01:50Z"
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: BestEffort
    startTime: "2022-01-27T17:01:39Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-01-27T17:01:16Z"
    generation: 1
    labels:
      app: nginx
      pod-template-hash: 7b6fcd488c
    name: nginx-deployment-7b6fcd488c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-deployment
      uid: 330313b9-f7fb-46db-9527-636a4775dce5
    resourceVersion: "949"
    uid: 55ab4c9e-0a34-4bf6-bdcd-6ce67f3566d6
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: nginx
        pod-template-hash: 7b6fcd488c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx
          pod-template-hash: 7b6fcd488c
      spec:
        containers:
        - envFrom:
          - configMapRef:
              name: nginx-cm
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: www
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - echo 'custom NGINX deployment simulator' > /app/index.html
          image: busybox:latest
          imagePullPolicy: Always
          name: setup-volume
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: www
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: www
          persistentVolumeClaim:
            claimName: nginx-pvc
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ERXlOekUyTlRZeU5Gb1hEVE15TURFeU5URTJOVFl5TkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSlJHCmdSNERvRXZUZTZ2VVhGRklqUmxVT3BLRjFqVDQxVzNuNUFyU0ltcSs4SmpCZXBaN1pRaDMxcS9XZ1pVbkZOUjMKaXhHT1Y1eG94d2E1eTJMQThBQTVRNmNlaXp6eTYzZ0gvVDJaM09oSmZJZVdYNTNGZi9lZzEvU0FNZmxpN25MYQpFcEhxa215YTZwU0FCUHhHOXpTWFMvR3BOdFoyZXNlMTJRRWZsOW9tcCs5c3hOdVdMRFd4c3I3ODFPSWlnMm9RCml5MlBsR2k4NkhHVk15OWZ2Z3V3TG9yRDNwSDVGQmhSaHJJYWkzZ3czY05CNUdqbmNHYnNlbnlYM3dxaVErb1YKSkoyZFFSZW05c1Y5TFlCbUFxV3lHdHNQUWZhRlIwWGlSUXVoS2ZJWTNSQXBPaytZRmRhckR6OGRwaE9VMXFyLwpNWVY5aldtdnl1em5BR2FnU3MwQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQSEF6WjYxckkxaUZhdzhRWUZNZGJrdGRSTTBNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBczQrQkZzdnpiMHJNcGZGTG5KNGY5SUY1L3JETVJjTUVVcFIxOTk5bnpqa2lzS2FMawpmVHB6cW1Ka2tsYjhEUllUMjVtb2ZwU05kSmI1RjJ5aVhjZ3J3Z0hwV1hTaHZVdTV0c2ZmeG1hbUViaXRUR1dhCnprYUJMaU42YStiQ0NJNWRTNEEwRVpZeGtPNGxpZG9mOHR2VUxpem5CTDU3M0hJRXhuM2RJNHozWFg2TEdMQ28KZk9Jdjl3MFBMTHN3eVRBT1l5eGo2QXBndk9lNDd1RCtaVXl1enByY0VaN0pYRFRuL0JYUjJjUjZVWTVhcGRZNApPUFZNRnpySmNMUEpSM3BPdHNiZUNIOGcxaWt6SkZua2xvSm8xK0t4MzZFY21jc05vZ3lvK09VUCtyd3kvYm5ICmQvMDJRZmcwQnFnRHRXSFhGK0ZZZ3pFR2hQdS92eWUyRkdjdQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    namespace: ZGVmYXVsdA==
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluRXpURUZaYUhSNFRsSlRlREpMZEhOUmIyMHRaa2xsUW0xMFlqTXdUbGhvYzJ4MlVubEtWMHh2ZW1jaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbVJsWm1GMWJIUXRkRzlyWlc0dE5YSXliV0lpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1dVlXMWxJam9pWkdWbVlYVnNkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJakExTXpOak56bGpMVEkwTVRrdE5HTTNZeTA0WlRCa0xXWmtaV1pqT1RBNE5UTXhZaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwa1pXWmhkV3gwT21SbFptRjFiSFFpZlEuS0J5dmw1aHhERDhzVWpBQ2h1WXIzTzRjVFk5VFh6U21wd09BNDA1LTdzbjRPbkl1VG9OOXQxOHZienlwNlFuV0pqSDZ5ZE5sRDBYNzNqLUVtbURUVGRXWEVXU2JpSGFrdVNmT2lQMHJnbE1JV1dDRWF6VFpJS0tjSzlMeUIweTNaTnF4c2J6cXhTU25tZzhVWWJPZlVJd0RxYm1uTGotYUJ0TlhndlBrM0FZYW1yMm9fc3ZmZnFJeEY3ZlBmelNOb1BqZWhIQmV4X29EU0JKQjhrMFZVRzJLbHg3V1JjVXFlTHcyMzhvdXZrZlNlOFRWQzllX3JmaDNFMmZNSVo4bGpqN29PYmZIanRGQUJJcGhDb1RaYVBPVlNhbnJ1Q3gxdThWNWpfQmVZR3JZLWtUSjZ2RXVIUTFqY01obFRfTzZ6ZmYwZVZQOXV5VGwzbVc1VW5DNk9B
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 0533c79c-2419-4c7c-8e0d-fdefc908531b
    creationTimestamp: "2022-01-27T16:58:01Z"
    name: default-token-5r2mb
    namespace: default
    resourceVersion: "460"
    uid: 54583fda-ffd7-4be2-bbba-3a8c1e7e622d
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    PASSWORD: dGVzdDEyM3B3
    USERNAME: dGVzdHM=
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"PASSWORD":"dGVzdDEyM3B3","USERNAME":"dGVzdHM="},"kind":"Secret","metadata":{"annotations":{},"name":"nginx-sec","namespace":"default"}}
    creationTimestamp: "2022-01-27T17:01:16Z"
    name: nginx-sec
    namespace: default
    resourceVersion: "807"
    uid: d0bcdd60-83c4-48d2-b4cd-6b824dc95317
  type: Opaque
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-01-27T16:57:42Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "218"
    uid: ac6047a2-e177-43a9-9cad-5ff9c9f18d28
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
  TEST_IS_FOR_RESOURCE: "StatefulSet"
